# bot.py
import logging
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# ====== –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ======
TOKEN = "7640426502:AAHGOWUMRxB79IOuEK7mKeFLC3Mb1DveNi4"          # –ø—ñ–¥—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω
PAYMENT_NUMBER = "https://send.monobank.ua/jar/41gi3pgXqB"  # –Ω–æ–º–µ—Ä –∞–±–æ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏
# ==========================

logging.basicConfig(level=logging.INFO)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏", callback_data="pay")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –∑–≤–∏—á–∞–π–Ω–æ update.message –±—É–¥–µ –ø—Ä–∏ /start
    if update.message:
        await update.message.reply_text(
            "‚ù§Ô∏è–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏:",
            reply_markup=reply_markup
        )
    else:
        # –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç: –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        user_id = update.effective_user.id
        await context.bot.send_message(
            chat_id=user_id,
            text="‚ù§Ô∏è–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏:",
            reply_markup=reply_markup
        )

async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –∑–∞–∫—Ä–∏–≤–∞—î "loading" —É –∫–Ω–æ–ø—Ü—ñ
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ç–µ–∫—Å—Ç –∑ –Ω–æ–º–µ—Ä–æ–º —É —Ç–æ–π –∂–µ —á–∞—Ç
    await query.message.reply_text(f"{PAYMENT_NUMBER}")

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_click, pattern="^pay$"))
    app.run_polling()

if __name__ == "__main__":
    main()
